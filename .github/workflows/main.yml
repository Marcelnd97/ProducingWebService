#name: Build & Deploy String app
#on:
#  push:
#    branches:
#      - ExamenEnLigne
#Jobs:
#  build-deploy:
#    name: Build and Deploy Exam in Line Spring Boot Application
#    runs-on: ubuntu-latest
#    steps:
#      - name: LS Output before checkout
#        run: ls
#
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Setup JDK 11
#        uses: actions/setup-java@4
#
#        with:
#           distribution: 'correctto'
#           java-version: 11
#
#      - name: Unit Tests
#        run: mvn -B test --file pom.xml
#
#      - name: Build application
#        run: |
#           mvn clean
#           mvn -B package --file pom.xml
#
#
#
##name: Super Cool workflow
##on: push
##Jobs:
##  cool_first_job:
##  runs-on: ubuntu-latest
##  steps:
##    - name: LS Output before checkout
##      run: ls
##    - name: Checkout code
##      uses: actions/checkout@v4
##    - name: LS Output After checkout
##      run: ls


name: Build & Deploy Sprint Boot application workflow
on:
  pull_request:
    branches: [ ExamenEnLigne ]
    paths:
      - 'src/**'
      - '.github/workflows/main.yaml'
  push:
    branches: [ ExamenEnLigne ]
    paths:
      - 'src/**'
      - '.github/workflows/main.yaml'

jobs:
  project-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
          
      - name: Set up the Maven dependencies caching
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') } }
          restore-keys: ${{ runner.os }}-m2

      - name: Install Maven dependencies
        run: mvn install

      - name: Run tests
        run: mvn --batch-mode --update-snapshots verify

